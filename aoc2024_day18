#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <queue>
#include <algorithm>
#include <map>
#include <cstdint>

using namespace std;

ifstream fin("_input.txt");
ofstream fout("y.txt");

int n = 71;
int m = 71;
int dx[] = {-1, 0, 1, 0};
int dy[] = {0, 1, 0, -1};

bool inmat(int i, int j)
{
    if (i >= 0 && i < n && j >= 0 && j < m)
        return true;

    return false;
}

int lee(vector<vector<bool>> a, int i, int j)
{
    vector<vector<int>> viz(n, vector<int>(m, 0));
    queue<pair<int, int>> q;

    q.push({0, 0});
    viz[0][0] = 1;
    a[i][j] = false;

    while (q.empty() == false)
    {
        int x = q.front().first;
        int y = q.front().second;
        q.pop();

        for (int d = 0; d < 4; d++)
        {
            int xnou = x + dx[d];
            int ynou = y + dy[d];

            if (inmat(xnou, ynou) == true && viz[xnou][ynou] == 0 && a[xnou][ynou] == true)
            {
                viz[xnou][ynou] = viz[x][y] + 1;
                q.push({xnou, ynou});
            }
        }
    }

    return viz[n - 1][m - 1];
}

int main()
{
    vector<vector<bool>> a(n, vector<bool>(m, true));

    int x, y, aux = 0;
    char c;

    vector<pair<int,int>>pct;
    while (fin >> x >> c >> y)
    {
        if (aux < 1024)
            a[x][y] = false;
        else    
            pct.push_back({x,y});
        
        aux++;
    }
    for(auto i : pct)
    {
        if(lee(a,i.first,i.second) == 0)
            cout<<i.first<<" "<<i.second<<"\n";
        a[i.first][i.second] = false;
    }
}
