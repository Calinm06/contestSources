#include <iostream>
#include <fstream>
#include <string>
#include <algorithm>
#include <vector>
#include <cstdint>

using namespace std;

#define int long long

ifstream fin("_input.txt");

int p;

vector<int> desp(string s)
{
    vector<int> sol;
    int l = s.size() + 1;
    int nr = 0;
    s += ' ';
    for (int i = p + 3; i < l; i++)
    {
        if (s[i] >= '0' && s[i] <= '9')
        {
            nr = nr * 10 + (int)(s[i] - '0');
        }
        else
        {
            sol.push_back(nr);
            nr = 0;
        }
    }
    return sol;
}

/// 1 +, 2 *, 3||
int calc(vector<int> &semne, vector<int> &numere)
{
    int sol = numere[0];

    for (int i = 0; i < numere.size() - 1; i++)
    {
        if (semne[i] == 1)
            sol += numere[i + 1];
        else if (semne[i] == 2)
            sol *= numere[i + 1];
        else
        {
            int aux = numere[i + 1];
            while(aux)
            {
                sol *= 10;
                aux /= 10;
            }
            sol += numere[i + 1];
        }
    }
    return sol;
}

void back(int k, vector<int> &a, bool &gasit,vector<int>&numere,int target)
{
    if (gasit == false)
        for (int i = 1; i <= 3; i++)
        {
            a[k] = i;
            if (k == a.size() - 1)
            {
                if(calc(a,numere) == target)
                    gasit = true;
            }
            else
                back(k + 1,a,gasit,numere,target);
        }
}

int32_t main()
{
    string s;
    int sol = 0;

    while (getline(fin, s))
    {
        int sum = 0;
        for (int i = 0; s[i] != ':'; i++)
        {
            sum = sum * 10 + (s[i] - '0');
            p = i;
        }

        vector<int> a = desp(s);
        vector<int> st(a.size() - 1, 0);

        bool ok = false;
        back(0,st,ok,a,sum);

        if(ok)
            sol += sum;
    }
    cout<<sol;
}
