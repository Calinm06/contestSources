/// part 1
#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <queue>
#include <algorithm>

using namespace std;

ifstream fin("input");

#define int long long

int nrcif(int n)
{
    int sol = 0;
    while(n)
    {
        sol++;
        n /= 10;
    }
    return sol;
}

vector<int>a;
int32_t main()
{
    int x,blinks = 25;
    while(fin>>x)
        a.push_back(x);

    for(int t = 0; t < blinks; t++)
    {
        for(int i = 0;i < a.size();i++)
        {
            if(a[i] == 0)
                a[i] = 1;
            else if(nrcif(a[i]) % 2 == 0)
            {
                int nr1,nr2;
                nr1 = nr2 = 0;
                int n = nrcif(a[i]);

                int p = 1;
                for(int j = 0;j < n / 2;j++)
                {
                    nr2 += p * (a[i] % 10);
                    a[i] /= 10;
                    p *= 10;
                }

                p = 1;
                for(int j = 0;j < n / 2;j++)
                {
                    nr1 += p * (a[i] % 10);
                    a[i] /= 10;
                    p *= 10;
                }
                a[i] = nr1;
                a.insert(a.begin() + i + 1,nr2);
                i++;

            }
            else
            {
                a[i] *= 2024;
            }
        }
    }
    cout<<a.size();
}


/// part 2

#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <queue>
#include <algorithm>
#include <map>
#include <cstdint>

using namespace std;

ifstream fin("_input.txt");
ofstream fout("y.txt");

#define int long long

int nrcif(int n)
{
    int sol = 0;
    while (n)
    {
        sol++;
        n /= 10;
    }
    return sol;
}

int32_t main()
{
    map<int, int> fr;

    int x, blinks = 75;
    while (fin >> x)
        fr[x]++;

    int sz = fr.size();
    for (int t = 0; t < blinks; t++)
    {
        vector<pair<int, int>> split;
        for (auto &i : fr)
        {
            if (i.second == 0)
                continue;
            if (i.first == 0)
            {
                split.push_back({1,i.second});
                fr[0] = 0;
            }
            else if (nrcif(i.first) % 2 == 0)
            {
                int nr1, nr2, aux;
                nr1 = nr2 = 0;
                aux = i.first;
                int n = nrcif(aux);

                int p = 1;
                for (int j = 0; j < n / 2; j++)
                {
                    nr2 += p * (aux % 10);
                    aux /= 10;
                    p *= 10;
                }

                p = 1;
                for (int j = 0; j < n / 2; j++)
                {
                    nr1 += p * (aux % 10);
                    aux /= 10;
                    p *= 10;
                }
                split.push_back({nr1, i.second});
                split.push_back({nr2, i.second});
                fr[i.first] = 0;
            }
            else
            {
                split.push_back({i.first * 2024, i.second});
                fr[i.first] = 0;
            }
        }

        for (auto j : split)
        {
            fr[j.first] += j.second;
        }

        // cout<<t<<endl;
    }

    int sol = 0;
    for (auto i : fr)
        sol += i.second;

    cout << sol;
}
