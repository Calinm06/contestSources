#include <iostream>
#include <fstream>
#include <string>
#include <algorithm>
#include <vector>

using namespace std;

ifstream fin("_input.txt");

vector<vector<int>> a(110);
string s;

void op1(string s)
{
    int nr1 = (s[0] - '0') * 10 + (s[1] - '0');
    int nr2 = (s[3] - '0') * 10 + (s[4] - '0');

    a[nr1].push_back(nr2);
}

vector<int> op2(string s)
{
    int st = 0;
    vector<int> sol;
    int nr = 0;
    while (st < s.size())
    {
        nr = (s[st] - '0') * 10 + (s[st + 1] - '0');
        sol.push_back(nr);
        nr = 0;
        st += 3;
    }
    return sol;
}

bool verif(vector<int> aux)
{
    for (int i = 0; i < aux.size(); i++)
    {
        for (int j = i + 1; j < aux.size(); j++)
        {

            if (count(a[aux[j]].begin(), a[aux[j]].end(), aux[i]) > 0)
                return false;
        }
    }
    return true;
}

int verif2(vector<int> &aux)
{
    for (int i = 0; i < aux.size(); i++)
    {
        for (int j = i + 1; j < aux.size(); j++)
        {
            if(count(a[aux[j]].begin(), a[aux[j]].end(), aux[i]) > 0)
                swap(aux[i], aux[j]);
        }
    }

    return aux[aux.size() / 2];
}

int main()
{
    int sol = 0;
    while (getline(fin, s))
    {
        if (s.size() == 5)
        {
            op1(s);
        }
        else
        {
            vector<int> aux = op2(s);
            if (verif(aux))
                continue;
            else
            {
                sol += verif2(aux);
            }
        }
    }
    cout << sol;
}
